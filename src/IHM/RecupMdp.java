/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IHM;

import DAO.PersonneDAO;
import Extension.CrypteMdp;
import Extension.IconesPerso;
import Extension.LienHypertexte;
import Extension.StringSimplifier;
import Metier.Personne;
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;

/**
 *
 * @author utilisateur
 */
public class RecupMdp extends javax.swing.JFrame
{
	//------------------------- ATTRIBUTS -------------------------//
	private final String iconeAdresseQuitter = "../icones/iconeQuitter.png";
	private final String iconeAdresseRetour = "../icones/iconeRetour.png";
	private final String iconeAdresseValider = "../icones/iconeValider.png";
	//------------------------- ATTRIBUTS -------------------------//
	public RecupMdp() {
		initComponents();
		//------------------------- DEFINITION ICONE DE BOUTON -------------------------//
		IconesPerso boutonValider = new IconesPerso();
		boutonValider.iconeBouton(valider, iconeAdresseValider);
		IconesPerso boutonRetour = new IconesPerso();
		boutonRetour.iconeBouton(retour, iconeAdresseRetour);
		IconesPerso boutonQuitter = new IconesPerso();
		boutonQuitter.iconeBouton(quitter, iconeAdresseQuitter);
		//------------------------- DEFINITION ICONE DE BOUTON -------------------------//
		
		//------------------------- POSITIONNEMENT FENETRE -------------------------//
			// GESTION AUTO DU POSITIONNEMENT EN CENTRE VERTICAL / HORIZONTAL
		this.setLocationRelativeTo(this);
		//------------------------- POSITIONNEMENT FENETRE -------------------------//
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        saisiePseudo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        saisieNom = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        saisiePrenom = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        saisieDateNaissance = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        valider = new javax.swing.JButton();
        quitter = new javax.swing.JButton();
        retour = new javax.swing.JButton();
        lien = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Source Sans Pro", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Récupération du mot de passe");

        jLabel2.setText("Vérification de votre pseudo :");

        jLabel3.setText("Vérification de votre nom :");

        jLabel4.setText("Vérification de votre prénom :");

        jLabel5.setText("Vérification de votre date de naissance :");

        saisieDateNaissance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                saisieDateNaissanceKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel6.setText("Format : JJ/MM/AAAA");

        valider.setText("Valider");
        valider.setMaximumSize(new java.awt.Dimension(150, 50));
        valider.setMinimumSize(new java.awt.Dimension(150, 50));
        valider.setPreferredSize(new java.awt.Dimension(150, 50));
        valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validerActionPerformed(evt);
            }
        });

        quitter.setText("Quitter");
        quitter.setMaximumSize(new java.awt.Dimension(150, 50));
        quitter.setMinimumSize(new java.awt.Dimension(150, 50));
        quitter.setPreferredSize(new java.awt.Dimension(150, 50));
        quitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitterActionPerformed(evt);
            }
        });

        retour.setText("Retour");
        retour.setMaximumSize(new java.awt.Dimension(150, 50));
        retour.setMinimumSize(new java.awt.Dimension(150, 50));
        retour.setPreferredSize(new java.awt.Dimension(150, 50));
        retour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourActionPerformed(evt);
            }
        });

        lien.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lien.setText("Programmé par STRYJEWSKI Nicolas");
        lien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lienMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lienMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lienMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(saisiePseudo)
                    .addComponent(saisieNom)
                    .addComponent(saisiePrenom)
                    .addComponent(saisieDateNaissance))
                .addGap(26, 26, 26)
                .addComponent(jLabel6)
                .addContainerGap(56, Short.MAX_VALUE))
            .addComponent(lien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(retour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(quitter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(148, 148, 148)
                            .addComponent(valider, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saisiePseudo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saisieNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saisiePrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saisieDateNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 201, Short.MAX_VALUE)
                .addComponent(lien)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(314, 314, 314)
                    .addComponent(valider, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(37, 37, 37)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(retour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(quitter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(49, Short.MAX_VALUE)))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {quitter, retour, valider});

        pack();
    }// </editor-fold>//GEN-END:initComponents
	//------------------------- GESTION EVENEMENTS -------------------------//
    private void validerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validerActionPerformed
        //------------------------- DEFINITION DES VALEURS SAISIES DES LABELS -------------------------//
			//------------------------- VERIFICATION SAISIE PSEUDO -------------------------//
		String pseudo = saisiePseudo.getText();
        StringSimplifier nettoiePseudo = new StringSimplifier();
        pseudo = nettoiePseudo.netttoyerChaine(pseudo);
			//------------------------- VERIFICATION SAISIE PSEUDO -------------------------//
			
			//------------------------- VERIFICATION SAISIE PRENOM -------------------------//
        String prenom = saisiePrenom.getText();
        StringSimplifier nettoiePrenom = new StringSimplifier();
        prenom = nettoiePrenom.netttoyerChaine(prenom);
			//------------------------- VERIFICATION SAISIE PRENOM -------------------------//
			
			//------------------------- VERIFICATION SAISIE NOM -------------------------//
        String nom = saisieNom.getText();
        StringSimplifier nettoieNom = new StringSimplifier();
        nom = nettoieNom.netttoyerChaine(nom);
			//------------------------- VERIFICATION SAISIE NOM -------------------------//
			
			//------------------------- VERIFICATION SAISIE DATE NAISSANCE -------------------------//
        String dateNaissance = saisieDateNaissance.getText();
        PersonneDAO personneDao = new PersonneDAO();
			//------------------------- VERIFICATION SAISIE DATE NAISSANCE -------------------------//
			
        //On extrait le caractère à l'index 2 et 5 pour vérifier le respect du format (JJ/MM/AAAA)
        char separationJm = dateNaissance.charAt(2);
        char separationMa = dateNaissance.charAt(5);
		//------------------------- DEFINITION DES VALEURS SAISIES DES LABELS -------------------------//
		
			//------------------------- GESTION DES ERREURS DE SAISIES DE L'UTILISATEUR -------------------------//
			
			//------------------------- VERIFICATION SAISIE PSEUDO -------------------------//
        if(pseudo.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Le champ PSEUDO est obligatoire.", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
            saisiePseudo.setBorder(BorderFactory.createLineBorder(Color.RED));
        }
			//------------------------- VERIFICATION SAISIE PSEUDO -------------------------//
		
			//------------------------- VERIFICATION SAISIE PRENOM -------------------------//
        else if(prenom.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Le champ PRENOM est obligatoire.", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
            saisiePrenom.setBorder(BorderFactory.createLineBorder(Color.RED));
        }
			//------------------------- VERIFICATION SAISIE PRENOM -------------------------//
		
			//------------------------- VERIFICATION SAISIE NOM -------------------------//
        else if(nom.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Le champ NOM est obligatoire.", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
            saisieNom.setBorder(BorderFactory.createLineBorder(Color.RED));
        }
			//------------------------- VERIFICATION SAISIE NOM -------------------------//
		
			//------------------------- VERIFICATION SAISIE DATE NAISSANCE -------------------------//
        else if(dateNaissance.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Le champ DATE DE NAISSANCE est obligatoire.", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
            saisieDateNaissance.setBorder(BorderFactory.createLineBorder(Color.RED));
        }
        //On vérifie que la saisie de la date respecte le format pré-établi (JJ/MM/AAAA).
        else if (separationJm != '/' && separationMa != '/')
        {
            JOptionPane.showMessageDialog(null, "Le format de date saisie n'est pas reconnue. \n Veuillez saisir la date sous ce format JJ/MM/AAAA \n Exemple : 28/11/1986", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
            saisieDateNaissance.setBorder(BorderFactory.createLineBorder(Color.RED));
        }
			//------------------------- VERIFICATION SAISIE DATE NAISSANCE -------------------------//
        else
        {
			Personne utilisateur;
            utilisateur = personneDao.chargePersonne(pseudo, prenom, nom, dateNaissance);

			if(utilisateur.getMdp() != null)
			{
				//------------------------- CRYPTAGE DU MOT DE PASSE -------------------------//
				CrypteMdp mdp = new CrypteMdp(utilisateur.getMdp());
				String decrypteMdp = mdp.dechiffrer();
				//------------------------- CRYPTAGE DU MOT DE PASSE -------------------------//
				
				JOptionPane.showMessageDialog(null, "Votre mot de passe est : \n "+decrypteMdp, "Récupération du mot de passe", JOptionPane.INFORMATION_MESSAGE);
				//------------------------- REDEFINITION DU TEXTE DES LABELS -------------------------//
				saisiePseudo.setText("");
				saisieNom.setText("");
				saisiePrenom.setText("");
				saisieDateNaissance.setText("");
				//------------------------- REDEFINITION DU TEXTE DES LABELS -------------------------//
			}
			else
			{
				JOptionPane.showMessageDialog(null, "Les informations saisies sont erronées. \n Vous ne pouvez pas récupérer votre mot de passe", "Echec de récupération du mot de passe", JOptionPane.ERROR_MESSAGE);
				//------------------------- REDEFINITION DU TEXTE DES LABELS -------------------------//
				saisiePseudo.setText("");
				saisieNom.setText("");
				saisiePrenom.setText("");
				saisieDateNaissance.setText("");
				//------------------------- REDEFINITION DU TEXTE DES LABELS -------------------------//
			}
        }
		//------------------------- GESTION DES ERREURS DE SAISIES DE L'UTILISATEUR -------------------------//
    }//GEN-LAST:event_validerActionPerformed

    private void quitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitterActionPerformed
        System.exit(0);
    }//GEN-LAST:event_quitterActionPerformed

    private void retourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retourActionPerformed
        Accueil retour = new Accueil();
        retour.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_retourActionPerformed

    private void lienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lienMouseClicked
        //Ouverture du navigateur par defaut du systeme + ouverture page definie
        String adresse = "https://www.linkedin.com/in/stryjewskinicolas/";
        LienHypertexte lienlabel = new LienHypertexte();
        lienlabel.ouvertureLien(adresse);
    }//GEN-LAST:event_lienMouseClicked

    private void lienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lienMouseEntered
        //Fonction pour survol de souris
        LienHypertexte lienlabel = new LienHypertexte();
        lien.setEnabled(true);
        lienlabel.souligner(true, lien);
    }//GEN-LAST:event_lienMouseEntered

    private void lienMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lienMouseExited
        //Fonction lors de l'arret du survol
        LienHypertexte lienlabel = new LienHypertexte();
        lienlabel.souligner(false, lien);
    }//GEN-LAST:event_lienMouseExited

    private void saisieDateNaissanceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_saisieDateNaissanceKeyPressed
        //On récupère la valeur de la touche pressée lorsaue le label est focus
		int key = evt.getKeyCode();
		//Si la valeur correspond à la constante "VK_ENTER" alors la touche "Entrée" a été pressée.
		if(key == KeyEvent.VK_ENTER)
		{
			String pseudo = saisiePseudo.getText();
			StringSimplifier nettoiePseudo = new StringSimplifier();
			pseudo = nettoiePseudo.netttoyerChaine(pseudo);

			String prenom = saisiePrenom.getText();
			StringSimplifier nettoiePrenom = new StringSimplifier();
			prenom = nettoiePrenom.netttoyerChaine(prenom);

			String nom = saisieNom.getText();
			StringSimplifier nettoieNom = new StringSimplifier();
			nom = nettoieNom.netttoyerChaine(nom);

			String dateNaissance = saisieDateNaissance.getText();
			PersonneDAO personneDao = new PersonneDAO();

			//On extrait le caractère à l'index 2 et 5 pour vérifier le respect du format (JJ/MM/AAAA)
			char separationJm = dateNaissance.charAt(2);
			char separationMa = dateNaissance.charAt(5);

			if(pseudo.equals(""))
			{
				JOptionPane.showMessageDialog(null, "Le champ PSEUDO est obligatoire.", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
				saisiePseudo.setBorder(BorderFactory.createLineBorder(Color.RED));
			}
			//On vérifie que la saisie du prénom à bien été effectuée.
			else if(prenom.equals(""))
			{
				JOptionPane.showMessageDialog(null, "Le champ PRENOM est obligatoire.", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
				saisiePrenom.setBorder(BorderFactory.createLineBorder(Color.RED));
			}
			//On vérifie que la saisie du nom à bien été effectuée.
			else if(nom.equals(""))
			{
				JOptionPane.showMessageDialog(null, "Le champ NOM est obligatoire.", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
				saisieNom.setBorder(BorderFactory.createLineBorder(Color.RED));
			}
			//On vérifie que la saisie de la date de naissance à bien été effectuée.
			else if(dateNaissance.equals(""))
			{
				JOptionPane.showMessageDialog(null, "Le champ DATE DE NAISSANCE est obligatoire.", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
				saisieDateNaissance.setBorder(BorderFactory.createLineBorder(Color.RED));
			}
			//On vérifie que la saisie de la date respecte le format pré-établi (JJ/MM/AAAA).
			else if (separationJm != '/' && separationMa != '/')
			{
				JOptionPane.showMessageDialog(null, "Le format de date saisie n'est pas reconnue. \n Veuillez saisir la date sous ce format JJ/MM/AAAA \n Exemple : 28/11/1986", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
				saisieDateNaissance.setBorder(BorderFactory.createLineBorder(Color.RED));
			}
			else
			{
				Personne utilisateur = personneDao.chargePersonne(pseudo, prenom, nom, dateNaissance);				
				
				if(utilisateur.getMdp() != null)
				{
					CrypteMdp mdp = new CrypteMdp(utilisateur.getMdp());
					String decrypteMdp = mdp.dechiffrer();
					
					JOptionPane.showMessageDialog(null, "Votre mot de passe est : \n "+decrypteMdp, "Récupération du mot de passe", JOptionPane.INFORMATION_MESSAGE);
					saisiePseudo.setText("");
					saisieNom.setText("");
					saisiePrenom.setText("");
					saisieDateNaissance.setText("");
				}
				else
				{
					JOptionPane.showMessageDialog(null, "Les informations saisies sont erronées. \n Vous ne pouvez pas récupérer votre mot de passe", "Echec de récupération du mot de passe", JOptionPane.ERROR_MESSAGE);
					saisiePseudo.setText("");
					saisieNom.setText("");
					saisiePrenom.setText("");
					saisieDateNaissance.setText("");
				}
			}
		}
    }//GEN-LAST:event_saisieDateNaissanceKeyPressed
	//------------------------- GESTION EVENEMENTS -------------------------//

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lien;
    private javax.swing.JButton quitter;
    private javax.swing.JButton retour;
    private javax.swing.JTextField saisieDateNaissance;
    private javax.swing.JTextField saisieNom;
    private javax.swing.JTextField saisiePrenom;
    private javax.swing.JTextField saisiePseudo;
    private javax.swing.JButton valider;
    // End of variables declaration//GEN-END:variables
}
