/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IHM;

import DAO.CompteDAO;
import Extension.IconesPerso;
import Extension.LienHypertexte;
import Metier.Compte;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author utilisateur
 */
public class ListeCompte extends javax.swing.JFrame
{
	//------------------------- ATTRIBUTS -------------------------//
	private int idPersonne;
	private javax.swing.JLabel label;
	
	private final String iconeAdresseQuitter = "../icones/iconeQuitter.png";
	private final String iconeAdresseRetour = "../icones/iconeRetour.png";
	private final String iconeAdresseAjouter = "../icones/iconeAjouter.png";
	private final String iconeAdresseSupprimer = "../icones/iconeSupprimer.png";
	private final String iconeAdresseModifier = "../icones/iconeModifier.png";
	//------------------------- ATTRIBUTS -------------------------//
	
	public ListeCompte(int id)
	{
		this.idPersonne = id;
		initComponents();
		
		//------------------------- DEFINITION ICONE DE BOUTON -------------------------//
		IconesPerso boutonQuitter = new IconesPerso();
		boutonQuitter.iconeBouton(quitter, iconeAdresseQuitter);
		IconesPerso boutonRetour = new IconesPerso();
		boutonRetour.iconeBouton(retour, iconeAdresseRetour);
		IconesPerso boutonAjouter = new IconesPerso();
		boutonAjouter.iconeBouton(ajouterCompte, iconeAdresseAjouter);
		IconesPerso boutonSupprimer = new IconesPerso();
		boutonSupprimer.iconeBouton(supprimerCompte, iconeAdresseSupprimer);
		IconesPerso boutonModifier = new IconesPerso();
		boutonModifier.iconeBouton(modifierCompte, iconeAdresseModifier);
		//------------------------- DEFINITION ICONE DE BOUTON -------------------------//
		
		setTitle("MyPass - Gestionnaire de mot de passe");
		initTable(id);
		
		//------------------------- POSITIONNEMENT FENETRE -------------------------//
			// GESTION AUTO DU POSITIONNEMENT EN CENTRE VERTICAL / HORIZONTAL
		this.setLocationRelativeTo(this);
		//------------------------- POSITIONNEMENT FENETRE -------------------------//
	}

	private ListeCompte()
	{
		initComponents();
		
		//------------------------- POSITIONNEMENT FENETRE -------------------------//
			// GESTION AUTO DU POSITIONNEMENT EN CENTRE VERTICAL / HORIZONTAL
		this.setLocationRelativeTo(this);
		//------------------------- POSITIONNEMENT FENETRE -------------------------//
	}
	
	//------------------------- DEFINITION / INITIALISATION JTABLE -------------------------//
	private void initTable(int id)
	{
		ArrayList <Compte> listeCompte = new ArrayList<>();
		CompteDAO compteDao = new CompteDAO();
		
		try {
			System.out.println("Chargement de liste.");
			listeCompte = compteDao.chargerListeCompte(id);
		} catch (SQLException ex) {
			System.out.println("Liste non chargee.");
			Logger.getLogger(ListeCompte.class.getName()).log(Level.SEVERE, null, ex);
		}
		
		DefaultTableModel model = (DefaultTableModel) tableCompte.getModel();
		
		for(Compte leCompte : listeCompte)
		{
			label = new JLabel(leCompte.getAdresse());
			
			Object[] row = new Object[]
			{
				leCompte.getId(),
                leCompte.getNom(),
                leCompte.getLogin(),
                leCompte.getMdp(),
				label.getText(),
            };
			model.addRow(row);
		}
	}
	//------------------------- DEFINITION / INITIALISATION JTABLE -------------------------//
	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	//------------------------- GESTION EVENEMENTS -------------------------//
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titre = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCompte = new javax.swing.JTable();
        retour = new javax.swing.JButton();
        ajouterCompte = new javax.swing.JButton();
        quitter = new javax.swing.JButton();
        lien = new javax.swing.JLabel();
        modifierCompte = new javax.swing.JButton();
        supprimerCompte = new javax.swing.JButton();
        lienAdresse = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(700, 600));
        setResizable(false);

        titre.setFont(new java.awt.Font("Source Sans Pro", 1, 36)); // NOI18N
        titre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titre.setText("Liste des comptes");

        tableCompte.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Nom du site", "Login", "Mot de passe", "Adresse web"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCompte.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCompteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableCompte);
        if (tableCompte.getColumnModel().getColumnCount() > 0) {
            tableCompte.getColumnModel().getColumn(0).setMinWidth(25);
            tableCompte.getColumnModel().getColumn(0).setMaxWidth(25);
            tableCompte.getColumnModel().getColumn(1).setMinWidth(100);
            tableCompte.getColumnModel().getColumn(1).setMaxWidth(100);
            tableCompte.getColumnModel().getColumn(2).setMinWidth(100);
            tableCompte.getColumnModel().getColumn(2).setMaxWidth(100);
            tableCompte.getColumnModel().getColumn(3).setMinWidth(100);
            tableCompte.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        retour.setText("Retour");
        retour.setMaximumSize(new java.awt.Dimension(150, 50));
        retour.setMinimumSize(new java.awt.Dimension(150, 50));
        retour.setPreferredSize(new java.awt.Dimension(150, 50));
        retour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourActionPerformed(evt);
            }
        });

        ajouterCompte.setText("Ajouter un compte");
        ajouterCompte.setMaximumSize(new java.awt.Dimension(150, 50));
        ajouterCompte.setMinimumSize(new java.awt.Dimension(150, 50));
        ajouterCompte.setPreferredSize(new java.awt.Dimension(150, 50));
        ajouterCompte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterCompteActionPerformed(evt);
            }
        });

        quitter.setText("Quitter");
        quitter.setMaximumSize(new java.awt.Dimension(150, 50));
        quitter.setMinimumSize(new java.awt.Dimension(150, 50));
        quitter.setPreferredSize(new java.awt.Dimension(150, 50));
        quitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitterActionPerformed(evt);
            }
        });

        lien.setBackground(java.awt.Color.white);
        lien.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lien.setText("Programm√© par STRYJEWSKI NICOLAS");
        lien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lienMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lienMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lienMouseExited(evt);
            }
        });

        modifierCompte.setText("Modifier un compte");
        modifierCompte.setMaximumSize(new java.awt.Dimension(150, 50));
        modifierCompte.setMinimumSize(new java.awt.Dimension(150, 50));
        modifierCompte.setPreferredSize(new java.awt.Dimension(150, 50));
        modifierCompte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierCompteActionPerformed(evt);
            }
        });

        supprimerCompte.setText("Supprimer un compte");
        supprimerCompte.setMaximumSize(new java.awt.Dimension(150, 50));
        supprimerCompte.setMinimumSize(new java.awt.Dimension(150, 50));
        supprimerCompte.setPreferredSize(new java.awt.Dimension(150, 50));
        supprimerCompte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerCompteActionPerformed(evt);
            }
        });

        lienAdresse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lienAdresseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lienAdresse, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addComponent(retour, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addGap(119, 119, 119)
                                .addComponent(quitter, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addGap(118, 118, 118))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(supprimerCompte, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                                .addGap(91, 91, 91)
                                .addComponent(modifierCompte, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                                .addGap(74, 74, 74)
                                .addComponent(ajouterCompte, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
            .addComponent(lien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(titre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(titre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lienAdresse, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(supprimerCompte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(modifierCompte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ajouterCompte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quitter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(retour, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(47, 47, 47)
                .addComponent(lien)
                .addGap(49, 49, 49))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void retourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retourActionPerformed
        Accueil retour = new Accueil();
		retour.setVisible(true);
		this.dispose();
    }//GEN-LAST:event_retourActionPerformed

    private void quitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitterActionPerformed
        System.exit(0);
    }//GEN-LAST:event_quitterActionPerformed

    private void ajouterCompteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterCompteActionPerformed
        CreerCompte ajoutCompte = new CreerCompte(idPersonne);
		ajoutCompte.setVisible(true);
		this.dispose();
    }//GEN-LAST:event_ajouterCompteActionPerformed

    private void modifierCompteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierCompteActionPerformed
		//On essaye de r√©cup√©rer une valeur int correspondant a l'id du compte s√©lectionn√©
		//si aucune ligne n'est choisie "getValueAt()" renvoi la valeur -1 et renvoi une exception
		try
		{
			int idCompte = (int) tableCompte.getValueAt(tableCompte.getSelectedRow(),0);

			MajCompte majCompte = new MajCompte(idCompte, idPersonne);
			majCompte.setVisible(true);
			this.dispose();
		}
		catch(Exception ex)
		{
			JOptionPane.showMessageDialog(null, "Veuillez choisir un compte √† mettre √† jour.", "Aucun compte s√©lectionn√©", JOptionPane.ERROR_MESSAGE);
		}
    }//GEN-LAST:event_modifierCompteActionPerformed

    private void supprimerCompteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerCompteActionPerformed
		try
		{
			int idCompte = (int) tableCompte.getValueAt(tableCompte.getSelectedRow(),0);
			CompteDAO compteDao = new CompteDAO();
			compteDao.supprimerCompte(idCompte);

			DefaultTableModel model = (DefaultTableModel) tableCompte.getModel();
			model.setRowCount(0);
			initTable(idPersonne);
		}
		catch (Exception ex)
		{
			JOptionPane.showMessageDialog(null, "Veuillez choisir un compte √† supprim√©.", "Aucun compte s√©lectionn√©", JOptionPane.ERROR_MESSAGE);
		}
    }//GEN-LAST:event_supprimerCompteActionPerformed

    private void lienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lienMouseClicked
        //Ouverture du navigateur par defaut du systeme + ouverture page definie
		String adresse = "https://www.linkedin.com/in/stryjewskinicolas/";
		LienHypertexte lienlabel = new LienHypertexte();
		lienlabel.ouvertureLien(adresse);
    }//GEN-LAST:event_lienMouseClicked

    private void lienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lienMouseEntered
        //Fonction pour survol de souris
		LienHypertexte lienlabel = new LienHypertexte();
		lien.setEnabled(true);
		lienlabel.souligner(true, lien);
    }//GEN-LAST:event_lienMouseEntered

    private void lienMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lienMouseExited
        //Fonction lors de l'arret du survol
		LienHypertexte lienlabel = new LienHypertexte();
		lienlabel.souligner(false, lien);
    }//GEN-LAST:event_lienMouseExited

    private void tableCompteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCompteMouseClicked
        int selectionLigne =tableCompte.getSelectedRow();
		int colonneAdresse = 3;
		
		if(selectionLigne != -1)
		{
			String adresse = label.getText();
			lienAdresse.setText("Acc√©der au site "+tableCompte.getValueAt(selectionLigne, 1));
			
			LienHypertexte lienlabel = new LienHypertexte();
			lienlabel.souligner(true, lienAdresse);
		}
    }//GEN-LAST:event_tableCompteMouseClicked

    private void lienAdresseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lienAdresseMouseClicked
        //Ouverture du navigateur par defaut du systeme + ouverture page definie
		int selectionLigne =tableCompte.getSelectedRow();
		String adresse = (String) tableCompte.getValueAt(selectionLigne, 4);
		LienHypertexte lienlabel = new LienHypertexte();
		lienlabel.ouvertureLien(adresse);
    }//GEN-LAST:event_lienAdresseMouseClicked
//------------------------- GESTION EVENEMENTS -------------------------//

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ajouterCompte;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lien;
    private javax.swing.JLabel lienAdresse;
    private javax.swing.JButton modifierCompte;
    private javax.swing.JButton quitter;
    private javax.swing.JButton retour;
    private javax.swing.JButton supprimerCompte;
    private javax.swing.JTable tableCompte;
    private javax.swing.JLabel titre;
    // End of variables declaration//GEN-END:variables
}
